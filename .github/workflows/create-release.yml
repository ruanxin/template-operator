name: "Create release"

env:
  IMAGE_REPO: europe-docker.pkg.dev/kyma-project/prod/template-operator
on:
  workflow_dispatch:
    inputs:
      name:
        description: "Release name"
        default: ""
        required: true
      since:
        description: "Changelog since"
        default: ""
        required: false

jobs:
  validate-head-status:
    name: Validate HEAD
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./scripts/release/
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Validate the release tag
        run: ./validate_release_tag.sh ${{ github.event.inputs.name }}

  draft-release:
    name: Draft release
    needs: validate-head-status
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
#      - name: Create changelog
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: ./scripts/release/create_changelog.sh ${{ github.event.inputs.name }} ${{ github.event.inputs.since }}
#      - name: Draft release
#        id: draft-release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          RELEASE_ID=$(./scripts/release/draft_release.sh ${{ github.event.inputs.name }})
#          echo "release_id=$RELEASE_ID" >> $GITHUB_OUTPUT
      - name: Create tag
        run: |
          git tag ${{ github.event.inputs.name }}
          git push origin ${{ github.event.inputs.name }} --tags

      - name: Wait for the Docker image
        timeout-minutes: 20
        env:
          ITERATIONS: 40
          SLEEP_SECONDS: 30
        run: ./scripts/release/wait_for_image.sh ${{ env.IMAGE_REPO }}:${{ github.event.inputs.name }} $ITERATIONS $SLEEP_SECONDS
#      - name: Create release assets
#        id: create-assets
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          PULL_BASE_REF: ${{ github.event.inputs.name }}
#        run: ./scripts/release/upload_assets.sh
    outputs:
      release_id: ${{ steps.draft-release.outputs.release_id }}
  builds:
    needs: draft-release
    uses: ./.github/workflows/build-template-operator.yml
    with:
      tag: "${{ github.event.inputs.name }}"
  publish-release:
    name: Publish release
    needs: [validate-head-status, draft-release, builds]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/release/publish_release.sh ${{ needs.draft-release.outputs.release_id }}
